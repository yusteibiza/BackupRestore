<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="kryptonPanel1.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="groupBox1.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="lblIntentos.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="txtPasswd.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="pbVerPasswordSMTP.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="label1.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="pictureBox1.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="btnSalir.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="btnEntrar.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAICAQAAEABADoAgAANgAAACAgAAABAAgAqAgAAB4DAAAgIAAAAQAgAKgQAADGCwAAKAAAACAA
        AABAAAAAAQAEAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICA
        AACAgIAAwMDAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAAhzMSEhAAAAAAAAAAAAAA
        MzN3NzgzcAAAAAAAAAAHMYN7l7e4tTMAAAAAAAAHM3v3t4t5N3tzAAAAAAAAM4uIi1MzMzi1twAAAAAA
        ADi3t4O3l3t4tzMAAAAAAAB7eYuImLe1t5i3AAAAAAAAN4uIi3MzM5izewAAAAAAADi3uIM3t5g4g5cA
        AAAAAAA3d4uIt3t7e3tzAAAAAAAAO4uIg3k3MTixewAAAAAAAHi4uIt7ebi4gzcAAAAAAAA4mIuImLg3
        e3t5AAAAAAAAO4uI87czOTiTOAAAAAAAAHiIi/g4uItxODMAAAAAAAA7i/i4t3tzE3OAAAAAAAAAiLcT
        eXt5g3OLAAAAAAAAADNx8Te3e4AAAAAAAAAAAAAAg4OAAAAAAAAAAAAAAAAAAAOzAAAAAAAAAAAAAAAA
        AAADgwAAAAAzEAAAAAAAAAAAA5cAAAAAPxAAAAAAAAAAAANzAAAAADgwAAAAAAAAAAADNwAAAAA4MAAA
        AAAAAAAAAzuAAAAIMxAAAAAAAAAAAAcXMAAAAzcwAAAAAAAAAAAHM3gAAIE5gAAAAAAAAAAAADkzcAcx
        MwAAAAAAAAAAAACDNzMzM3gAAAAAAAAAAAAABzuIeTNwAAAAAAAAAAAAAAAHkzNwAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP/8Af//8AB//4AAP/4AAD/8AAA//AAAP/wAAD/8AAA//AAAP/wAAD/8AAA//AAAP/wA
        AD/8AAA//AAAP/wAAH/8AAD//AAf//8H////j////4/x//+P8f//j/H//4/x//+H4f//h+H//4PB///B
        g///wAP//+AH///4H///////KAAAACAAAABAAAAAAQAIAAAAAAAABAAAAAAAAAAAAAAAAQAAAAEAAAAA
        AAAKMUMACzNFAA0+VAANQFcADkNbABRDWAASRVsAD0dgAA9LZAAbT2UAEE5oABFSbQAVUWwAE1RvAB9R
        aQASVXIAFFZzABJYdQAZWnUAHll3ABJaeAATXHoAFF17ABNdfAAjXXQALGB5ACljfAAUYYIAFWWGABVn
        iQAVaYoAFmuNABZtjwAZa4wAGWyOABlvkQAacJIAHHKUAB51lgAzcYoAL3OSACF3mAAieJkAJHqbACR7
        nAAmfJ0AKH6fADN1kgAyeZkAKX+gAFd0ggBCepQAKoChACyBogAug6QAL4SlADCFpgA4g6AAPommADGG
        qAAziKkANImqADaLrAA3jK0AOI2uADqPsAA7kLEAPJGyAD6TtAA/lLUAQ46sAFSNqABala4ARJGwAECV
        tgBCl7gAQ5i5AESZugBGm7wAR5y9AEidvgBfl7AAX5myAF6ctQBhmrIAap21AHGcsQB6o7cAdaK4AEqf
        wABGoMEAS6DBAEyhwgBPpMUAUKXGAFKnyABTqMkAVKnKAFarzABXrM0AWa7OAFuw0ABcsdEAX7TUAHSy
        yQB9tMoAYLXVAGa62gBpvt0AZb/gAGvA3wBtwuEAccblAHPI5wB1yukAecvqAIGrvQCDrL8AjK/AAIa4
        zgCVwdUAgM7rAJDO5gCG0OwAidHsAJDT7QCT1e4AmtjvAITV8gCd2vAApNzxAK7f8gCy4fMAuOT0AL7m
        9QDF6PYAyOn2AMzr9wDU7fYA0u34AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        5/9Albb/Nous/zuQsf87kLH/PZKz/z2Ss/89krP/O5Cx/3LH5v9Qpcb/KH6f/xVpiv8VXHneEiQtUgAA
        ACYAAAAUAAAACAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMHKQJiNlg9sUVnP+Fm2P/0+k
        xf9nu9v/uOT0/1itzv9Qpcb/UqfI/1Clxv9Gm7z/P5S1/zaLrP8sgaL/X7TU/1Spyv9Wq8z/QJW2/yZ8
        nf8aOEZ0AAAARQAAADgAAAAlAAAAFgAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUUm3+OY6v/1uw
        0P9gtdX/ab7d/2vA3/+45PT/RJm6/zmOr/8yh6j/Jnyd/xlvkf8VaYr/FWmK/xVpiv9csdH/TaLD/zKH
        qP9Gm7z/UKXG/xk2RHQAAABIAAAAQgAAADgAAAAsAAAAHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNc
        ev9sweD/ZbnZ/2W52f9gtdX/W7DQ/6Tc8f86j7D/LoOk/zOIqf82i6z/O5Cx/z2Ss/9Albb/R5y9/4bQ
        7P9qv97/QJW2/yd9nv8mfJ3/GjhGcQAAAEcAAABBAAAAOQAAADAAAAAnAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAQJW2/1Wqy/9Qpcb/T6TF/1itzv9pvt3/xej2/1qvz/9Sp8j/UabH/0yhwv9HnL3/QZa3/zqP
        sP84ja7/ab7d/1KnyP9LoMH/Sp/A/y2Co/8cPEtsAAAAQAAAADgAAAAtAAAAIwAAABsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAfdpf/R5y9/1eszf9pvt3/ecvq/5rY7//F6Pb/Qpe4/zeMrf8sgaL/JXuc/xxy
        lP8Zb5H/FmuN/xlvkf9gtdX/SJ2+/yF3mP82i6z/bsPi/zJcb0QAAAAhAAAAGgAAABIAAAALAAAACAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACV7nP9httb/ab7d/2e72/9httb/X7TU/67f8v8+k7T/Moeo/zmO
        r/86j7D/PpO0/0GWt/9Gm7z/TaLD/4nR7P9rwN//OY6v/xlvkf8Zb5H/bpqvGwAAAAUAAAADAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQpe4/1Wqy/9Uqcr/VarL/2G21v9yx+b/yOn2/1uw
        0P9TqMn/V6zN/1KnyP9PpMX/SJ2+/0CVtv8+k7T/bsPi/1arzP9Jnr//RJm6/yyBov84Y3Y7AAAAGwAA
        AA8AAAAHAAAABAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdc5X/VKnK/2a62v95y+r/ndrw/67f
        8v/I6fb/Qpe4/zeMrf8yh6j/KoCh/yJ4mf8Zb5H/GW+R/yJ4mf9it9f/SZ6//x50lv8ug6T/bsPi/y1V
        aEwAAAApAAAAJgAAABwAAAAUAAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACh+n/9sweD/dcrp/3XK
        6f9uw+L/Z7vb/7Lh8/9Albb/NYqr/ziNrv87kLH/PZKz/0CVtv9HnL3/UKXG/5PV7v9mutr/Moeo/xVp
        iv8bcZP/TnqOKQAAAA0AAAAWAAAAFgAAABUAAAASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARZq7/2C1
        1f9httb/YbbW/27D4v+J0ez/0u34/16z0/9XrM3/Wa7P/1Wqy/9Sp8j/Sp/A/0mev/9LoMH/c8jn/1mu
        z/9Embr/PJGy/zKHqP+jzuITAAAAAAAAAAEAAAADAAAABAAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAjeZr/XbLS/3HG5f+J0ez/uOT0/8Xo9v/M6/f/Qpe4/zeMrf8yh6j/KX+g/yJ4mf8bcZP/HHKU/y2C
        o/9TqMn/Q5i5/xlvkf8pf6D/bsPi/6PO4hMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAcbHOByqAof91yun/idHs/4DO6/91yun/htDs/77m9f9httb/TaLD/1itzv9dstL/ar/e/27D
        4v9xxuX/I110/xJFW/8ZW3f/UKXG/xZtj/8ccpT/o87iEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABxsc4HRJm6/27D4v+Azuv/suHz/77m9f+J0ez/gM7r/27D4v9gtdX/Z7vb/2a6
        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
        Af//wAP//+AH///wD///////
</value>
  </data>
</root>